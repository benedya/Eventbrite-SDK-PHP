<?php namespace Eventbrite\Controllers;

use Eventbrite\Configurations\Configuration;
use Eventbrite\Exceptions\APIException;
use Eventbrite\Helpers\APIHelper;
use Unirest\Request;

/*
 * EventBriteLib
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 03/01/2015
 */

class OrderController
{
    /**
     * TODO: type endpoint description here
     * @param  string                     $orderID Required parameter: TODO: type description here
     * @return RetrieveEventOrderResponse response from the API call*/
    public function retrieveUserOrderDetail(
        $orderID
    ) {
        //the base uri for api requests
        $queryBuilder = Configuration::baseUri();

        //prepare query string for API call
        $queryBuilder = $queryBuilder.'/v3/Orders/{Order ID}/';

        //process optional query parameters
        APIHelper::appendUrlWithTemplateParameters($queryBuilder, array(
            'Order ID' => $orderID,
            ));

        //validate and preprocess url
        $queryUrl = APIHelper::cleanUrl($queryBuilder);

        //prepare headers
        $headers = array(
            'User-Agent' => 'APIMATIC 2.0',
            'Accept' => 'application/json',
            'Authorization' => sprintf('Bearer %1$s', Configuration::token())
        );

        //prepare API request
        $response = Request::get($queryUrl, $headers);

        //Error handling using HTTP status codes
        if (($response->code < 200) || ($response->code > 206)) { //[200,206] = HTTP OK
            throw new APIException("HTTP Response Not OK", $response->code);
        }

        return $response->body;
    }
}
